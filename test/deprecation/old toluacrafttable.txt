/*
** Lua binding: CraftTable
*/

#include "tolua.h"

#ifndef __cplusplus
#include <stdlib.h>
#endif
#ifdef __cplusplus
 extern "C" int tolua_bnd_takeownership (lua_State* L); // from tolua_map.c
#else
 int tolua_bnd_takeownership (lua_State* L); /* from tolua_map.c */
#endif
#include <string.h>

/* Exported function */
TOLUA_API int tolua_CraftTable_open (lua_State* tolua_S);
LUALIB_API int luaopen_CraftTable (lua_State* tolua_S);

#include "CraftTable.h"

/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"CraftTable");
 tolua_usertype(tolua_S,"Item");
 tolua_usertype(tolua_S,"Entity");
}

/* method: new of class  CraftTable */
static int tolua_CraftTable_CraftTable_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isnumber(tolua_S,2,0,&tolua_err) || 
 !tolua_isnumber(tolua_S,3,0,&tolua_err) || 
 !tolua_isnumber(tolua_S,4,0,&tolua_err) || 
 !tolua_isnumber(tolua_S,5,0,&tolua_err) || 
 !tolua_isstring(tolua_S,6,0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  float X = ((float)  tolua_tonumber(tolua_S,2,0));
  float Y = ((float)  tolua_tonumber(tolua_S,3,0));
  int W = ((int)  tolua_tonumber(tolua_S,4,0));
  int H = ((int)  tolua_tonumber(tolua_S,5,0));
  char* filename = ((char*)  tolua_tostring(tolua_S,6,0));
 {
  CraftTable* tolua_ret = (CraftTable*)  new CraftTable(X,Y,W,H,filename);
 tolua_pushusertype(tolua_S,(void*)tolua_ret,"CraftTable");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}

/* method: addItem of class  CraftTable */
static int tolua_CraftTable_CraftTable_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  CraftTable* self = (CraftTable*)  tolua_tousertype(tolua_S,1,0);
  Item* i = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addItem'",NULL);
#endif
 {
  self->addItem(i);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}

/* method: getInputTableSize of class  CraftTable */
static int tolua_CraftTable_CraftTable_getInputTableSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  CraftTable* self = (CraftTable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInputTableSize'",NULL);
#endif
 {
  int tolua_ret = (int)  self->getInputTableSize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInputTableSize'.",&tolua_err);
 return 0;
#endif
}

/* method: getResultTableSize of class  CraftTable */
static int tolua_CraftTable_CraftTable_getResultTableSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  CraftTable* self = (CraftTable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getResultTableSize'",NULL);
#endif
 {
  int tolua_ret = (int)  self->getResultTableSize();
 tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getResultTableSize'.",&tolua_err);
 return 0;
#endif
}

/* method: status of class  CraftTable */
static int tolua_CraftTable_CraftTable_status00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  CraftTable* self = (CraftTable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'status'",NULL);
#endif
 {
  self->status();
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'status'.",&tolua_err);
 return 0;
#endif
}

/* method: giveResult of class  CraftTable */
static int tolua_CraftTable_CraftTable_giveResult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertype(tolua_S,1,"CraftTable",0,&tolua_err) || 
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
  CraftTable* self = (CraftTable*)  tolua_tousertype(tolua_S,1,0);
  lua_State* L =  tolua_S;
#ifndef TOLUA_RELEASE
 if (!self) tolua_error(tolua_S,"invalid 'self' in function 'giveResult'",NULL);
#endif
 {
  self->giveResult(L);
 }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveResult'.",&tolua_err);
 return 0;
#endif
}

/* Open lib function */
LUALIB_API int luaopen_CraftTable (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
 tolua_cclass(tolua_S,"CraftTable","CraftTable","Entity",NULL);
 tolua_beginmodule(tolua_S,"CraftTable");
 tolua_function(tolua_S,"new",tolua_CraftTable_CraftTable_new00);
 tolua_function(tolua_S,"addItem",tolua_CraftTable_CraftTable_addItem00);
 tolua_function(tolua_S,"getInputTableSize",tolua_CraftTable_CraftTable_getInputTableSize00);
 tolua_function(tolua_S,"getResultTableSize",tolua_CraftTable_CraftTable_getResultTableSize00);
 tolua_function(tolua_S,"status",tolua_CraftTable_CraftTable_status00);
 tolua_function(tolua_S,"giveResult",tolua_CraftTable_CraftTable_giveResult00);
 tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}
/* Open tolua function */
TOLUA_API int tolua_CraftTable_open (lua_State* tolua_S)
{
 lua_pushcfunction(tolua_S, luaopen_CraftTable);
 lua_pushstring(tolua_S, "CraftTable");
 lua_call(tolua_S, 1, 0);
 return 1;
}
